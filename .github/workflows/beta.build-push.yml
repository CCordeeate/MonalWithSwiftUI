# build a new beta release and push it to apple
name: beta.build-push

# Controls when the action will run.
on:
  # Triggers the workflow on push
  push:
    branches: [ beta ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildAndPublishBeta:
    # The type of runner that the job will run on
    runs-on: self-hosted
    env:
      APP_NAME: "Monal"
      APP_DIR: "Monal.app"
      IOS_DEVELOPER_NAME: "Apple Distribution: Anurodh Pokharel (33XS7DE5NZ)"
      APP_DEVELOPER_NAME: "Developer ID Application: Anurodh Pokharel (33XS7DE5NZ)"
      GCC_PREPROCESSOR_DEFINITIONS: "DEBUG=1"
      BUILD_TYPE: "Beta"
      EXPORT_OPTIONS_CATALYST: "../scripts/exportOptions/Beta_Catalyst_ExportOptions.plist"
      EXPORT_OPTIONS_IOS: "../scripts/exportOptions/Beta_iOS_ExportOptions.plist"
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Checkout submodules
        run: git submodule update --remote
      - name: Get last build tag and increment it
        run: |
          oldBuildNumber=$(git tag --sort="v:refname" |grep "Build_iOS" | tail -n1 | sed 's/Build_iOS_//g')
          buildNumber=$(expr $oldBuildNumber + 1)
          echo "New buildNumber is $buildNumber"
          git tag Build_iOS_$buildNumber
      - name: Insert buildNumber into plists
        run: sh ./scripts/set_version_number.sh
      - name: Make our build scripts executable
        run: chmod +x ./scripts/build.sh
      - name: Run build
        run: ./scripts/build.sh
      - name: validate ios app
        run: xcrun altool --validate-app --file ./Monal/build/ipa/Monal.ipa --asc-provider AnurodhPokharel17643632 -u "$(cat /Users/build/apple_connect_upload_mail.txt)" -p "$(cat /Users/build/apple_connect_upload_secret.txt)"
      - name: push tag to beta repo
        run: |
          buildNumber=$(git tag --sort="v:refname" |grep "Build_iOS" | tail -n1 | sed 's/Build_iOS_//g')
          git push origin Build_iOS_$buildNumber
      - name: Notarize catalyst
        run: xcrun altool --notarize-app -f ./Monal/build/app/Monal.zip --asc-provider AnurodhPokharel17643632 --primary-bundle-id maccatalyst.G7YU7X7KRJ.SworIM -u "$(cat /Users/build/apple_connect_upload_mail.txt)" -p "$(cat /Users/build/apple_connect_upload_secret.txt)"
      - name: Publish ios to appstore connect
        run: xcrun altool --upload-app -f ./Monal/build/ipa/Monal.ipa --asc-provider AnurodhPokharel17643632 --team-id 33XS7DE5NZ -u "$(cat /Users/build/apple_connect_upload_mail.txt)" -p "$(cat /Users/build/apple_connect_upload_secret.txt)"
      - name: wait a bit for noarize
        run: sleep 60
      - name: staple
        run: |
          cd Monal/build/app/tar_release/
          stapleTries=0
          while :
          do
            xcrun stapler staple "$APP_DIR" || sleep 60
            stapleTries=$((stapleTries +1))
            if [ $? -eq 0 ]; then break; fi
            if [ $stapleTries -gt 15]; then exit 1; fi
          done
          stapler validate "$APP_DIR"
          /usr/bin/ditto -c -k --sequesterRsrc --keepParent "$APP_DIR" "../$APP_NAME.zip"
          cd ../../../..
      - name: upload new catalyst beta to monal.im
        run: |
          curl -X POST -F "macbeta=@Monal/build/app/$APP_NAME.zip" -H "X-Secret: $(cat /Users/build/beta_upload_secret.txt)" https://monal.im/upload-macos-beta.php
      #- name: Publish catalyst to appstore connect
      #  run:  xcrun altool --upload-app --file ./Monal/build/app/Monal.zip --asc-provider AnurodhPokharel17643632 --team-id 33XS7DE5NZ --primary-bundle-id maccatalyst.G7YU7X7KRJ.SworIM -u "$(cat /Users/build/apple_connect_upload_mail.txt)" -p "$(cat /Users/build/apple_connect_upload_secret.txt)"
      - uses: actions/upload-artifact@v2
        with:
          name: monal-catalyst
          path: Monal/build/app/Monal.zip
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: monal-ios
          path: Monal/build/ipa/Monal.ipa
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: monal-catalyst-dsym
          path: Monal/build/macos_Monal.xcarchive/dSYMs
          if-no-files-found: error
      - uses: actions/upload-artifact@v2
        with:
          name: monal-ios-dsym
          path: Monal/build/ios_Monal.xcarchive/dSYMs
          if-no-files-found: error
